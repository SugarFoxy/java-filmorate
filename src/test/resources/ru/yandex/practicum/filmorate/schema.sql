DROP TABLE film, film_genre,friend, genre,like_user_film,rating,users;


CREATE TABLE IF NOT EXISTS rating (
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating varchar);


CREATE TABLE IF NOT EXISTS film (
    film_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration BIGINT,
    rating INT REFERENCES rating(rating_id) NOT NULL
    );

CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre varchar);

CREATE TABLE IF NOT EXISTS film_genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_id integer REFERENCES genre (genre_id) ON DELETE CASCADE,
    film_id integer REFERENCES film (film_id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name varchar,
    login varchar NOT NULL,
    email varchar NOT NULL,
    birthday date NOT NULL,
    CONSTRAINT wrong_birthday_date CHECK (birthday < CURRENT_DATE));

CREATE TABLE IF NOT EXISTS friend (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id integer REFERENCES users (user_id) ON DELETE CASCADE,
    status boolean);

CREATE TABLE IF NOT EXISTS like_user_film (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id integer REFERENCES film (film_id) ON DELETE CASCADE,
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE
    );